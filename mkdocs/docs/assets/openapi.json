{
  "openapi": "3.0.0",
  "paths": {
    "/account": {
      "post": {
        "operationId": "AccountController_createAccount",
        "summary": "Create a new account.",
        "description": "This endpoint registers a new account on the node's wallet.\nThe account consists of a new Hedera account (and its associated account ID, public / private key) and a set of Crystals-Kyber keys of 512-bit, 768-bit, and 1024-bit sizes used for encryption.\n\nA new account needs to be created with an initial balance that they will then use to perform operations on the Hedera network. The initial balance is subtracted from the Node account and transferred to the new account on creation.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateAccountRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HederaConnectorCreateAccountResponse"
                }
              }
            }
          },
          "412": {
            "description": "Account creation error: Node account does not have enough balance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Account"]
      },
      "get": {
        "operationId": "AccountController_getAllAccounts",
        "summary": "Get all accounts registered on the node.",
        "description": "This endpoint returns the publicly available information about all the accounts registered on the node.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Accounts retrieved response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HederaConnectorGetAllAccountsResponse"
                }
              }
            }
          }
        },
        "tags": ["Account"]
      }
    },
    "/account/{id}": {
      "get": {
        "operationId": "AccountController_getAccount",
        "summary": "Get information about an account registered on the node given its id.",
        "description": "This endpoint returns the publicly available information about an account registered on the node given its ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HederaConnectorGetAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account retrieval error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Account"]
      }
    },
    "/account/{id}/balance": {
      "get": {
        "operationId": "AccountController_getAccountBalance",
        "summary": "Get the balance of an account given its id.",
        "description": "This endpoint returns the balance of an account given its id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Account retrieved response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HederaConnectorAccountBalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account retrieval error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountBalanceErrorResponse"
                }
              }
            }
          }
        },
        "tags": ["Account"]
      }
    },
    "/topic": {
      "post": {
        "operationId": "TopicController_createPublicTopic",
        "summary": "Create a new public topic.",
        "parameters": [
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } },
        "tags": ["Topic"]
      }
    },
    "/topic/{id}": {
      "get": {
        "operationId": "TopicController_getPublicTopicInformation",
        "summary": "Get public topic information.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Topic"]
      },
      "delete": {
        "operationId": "TopicController_deletePublicTopic",
        "summary": "Delete a public topic.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Topic"]
      }
    },
    "/topic/{id}/message": {
      "post": {
        "operationId": "TopicController_sendMessageToPublicTopic",
        "summary": "Send a message to a public topic.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendMessageToTopicDTO" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Topic"]
      }
    },
    "/topic/{id}/message/{number}": {
      "get": {
        "operationId": "TopicController_getMessageFromTopic",
        "summary": "Get a message from a topic given its sequence number.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "number",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Topic"]
      }
    },
    "/encryptedtopic": {
      "post": {
        "operationId": "EncryptedTopicController_createEncryptedTopic",
        "summary": "Create a new encrypted topic.",
        "description": "An encrypted topic is a Hedera network topic that utilizes hybrid encryption and submit keys to maintain privacy.\n\nWhile it's still a publicly accessible topic, the contents of the messages are encrypted and will be nonsensical to everyone\nexcept for the topic participants.\n\nUpon creation, participants need to be explicitly added to the topic configuration message (the first message in the topic,\nakin to a Hyperledger Fabric Channel Configuration block). Their Kyber public key is used to encrypt the configuration message\nand any subsequent messages in the topic, ensuring that messages can only be decrypted by using their private key.\n",
        "parameters": [
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEncryptedTopicDTO"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Encrypted Topic"]
      },
      "get": {
        "operationId": "EncryptedTopicController_getAllEncryptedTopics",
        "summary": "Get all encrypted topic configurations stored on the Node.",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted Topic"]
      }
    },
    "/encryptedtopic/{id}/participants": {
      "get": {
        "operationId": "EncryptedTopicController_getEncryptedTopicParticipants",
        "summary": "Get encrypted topic participants list.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted Topic"]
      }
    },
    "/encryptedtopic/{id}/message": {
      "post": {
        "operationId": "EncryptedTopicController_sendMessageToEncryptedTopic",
        "summary": "Send a message to an encrypted topic.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageToEncryptedTopicDTO"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Encrypted Topic"]
      }
    },
    "/encryptedtopic/{id}/message/{number}": {
      "get": {
        "operationId": "EncryptedTopicController_getMessageFromEncryptedTopic",
        "summary": "Get a message from an encrypted topic given its sequence number.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "number",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted Topic"]
      }
    },
    "/file": {
      "post": {
        "operationId": "FileController_createPublicFile",
        "summary": "Create a new public file.",
        "description": "This endpoint creates a new public file on the Hedera network.\nThe endpoint accepts a request body with the contents of the file, but can also be ran with an empty \"contents\" key. This will create an empty file, to which data can be appended later, or updated as a whole.",
        "parameters": [
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateAppendFileDTO"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["File"]
      }
    },
    "/file/{id}": {
      "get": {
        "operationId": "FileController_getPublicFile",
        "summary": "Get the contents of a public file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["File"]
      },
      "put": {
        "operationId": "FileController_updatePublicFile",
        "summary": "Update a public file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateAppendFileDTO"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["File"]
      },
      "delete": {
        "operationId": "FileController_deletePublicFile",
        "summary": "Delete a public file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["File"]
      }
    },
    "/file/{id}/append/{contents}": {
      "put": {
        "operationId": "FileController_appendToPublicFile",
        "summary": "Append contents to a public file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "contents",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["File"]
      }
    },
    "/encryptedfile": {
      "post": {
        "operationId": "EncryptedFileController_createEncryptedFile",
        "summary": "Create a new encrypted file.",
        "description": "This endpoint creates a new encrypted file on the Hedera network.\nThe endpoint accepts a request body with the contents of the file, but can also be ran with an empty \"contents\" key. This will create an empty file, to which data can be appended later, or updated as a whole.",
        "parameters": [
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEncryptedFileDTO"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Encrypted File"]
      }
    },
    "/encryptedfile/{id}": {
      "get": {
        "operationId": "EncryptedFileController_getEncryptedFileContents",
        "summary": "Get the contents of an encrypted file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted File"]
      },
      "delete": {
        "operationId": "EncryptedFileController_deleteEncryptedFile",
        "summary": "Delete an encrypted file.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted File"]
      }
    },
    "/encryptedfile/{id}/access": {
      "put": {
        "operationId": "EncryptedFileController_updateEncryptedFileContents",
        "summary": "Add more participants to the encrypted file access list.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "accountId",
            "required": false,
            "in": "query",
            "description": "Account performing this operation.",
            "example": "0.0.1234",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileParticipantsDTO"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["Encrypted File"]
      }
    }
  },
  "info": {
    "title": "Hedera Hashgraph Connector",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateAccountRequest": {
        "type": "object",
        "properties": {
          "initialBalance": {
            "type": "number",
            "description": "Initial balance to create the account with",
            "example": 100
          }
        },
        "required": ["initialBalance"]
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "hederaAccountId": {
            "type": "string",
            "description": "Id of the new Hedera Account",
            "example": "0.0.1234"
          },
          "hederaPublicKey": {
            "type": "string",
            "description": "Hedera Account public key",
            "example": "302a300506032b..."
          },
          "kyber512PublicKey": {
            "type": "string",
            "description": "Kyber public key of size 512",
            "example": "OjcSV4DE54uUwDph4XUoF1g6EikOxju9NrDPmhChiMNa..."
          },
          "kyber768PublicKey": {
            "type": "string",
            "description": "Kyber public key of size 768",
            "example": "T4SZPfAhLDwsxwynGzqtZVVbilV3wKoy9BEquvwrt/Sj..."
          },
          "kyber1024PublicKey": {
            "type": "string",
            "description": "Kyber public key of size 1024",
            "example": "d7FPALymNtNGsMA9SKKhHqgfH/rJq4bBjSUMMtaVgtei..."
          }
        },
        "required": [
          "hederaAccountId",
          "hederaPublicKey",
          "kyber512PublicKey",
          "kyber768PublicKey",
          "kyber1024PublicKey"
        ]
      },
      "HederaConnectorCreateAccountResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 201 },
          "message": { "type": "string", "example": "Account created." },
          "payload": { "$ref": "#/components/schemas/AccountResponse" }
        },
        "required": ["statusCode", "message", "payload"]
      },
      "CreateAccountErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 412 },
          "message": {
            "type": "string",
            "example": "Node account does not have enough balance to create new account."
          },
          "error": { "type": "string", "example": "Precondition Failed" }
        },
        "required": ["statusCode", "message", "error"]
      },
      "GetAllAccountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "example": [
              {
                "hederaAccountId": "0.0.1234",
                "hederaPublicKey": "302a300506032b...",
                "kyber512PublicKey": "OjcSV4DE54uUwDph4XUoF1g6EikOxju9NrDPmhChiMNa...",
                "kyber768PublicKey": "T4SZPfAhLDwsxwynGzqtZVVbilV3wKoy9BEquvwrt/Sj...",
                "kyber1024PublicKey": "d7FPALymNtNGsMA9SKKhHqgfH/rJq4bBjSUMMtaVgtei..."
              }
            ],
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccountResponse" }
          }
        },
        "required": ["accounts"]
      },
      "HederaConnectorGetAllAccountsResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 200 },
          "message": { "type": "string", "example": "Accounts retrieved." },
          "payload": { "$ref": "#/components/schemas/GetAllAccountsResponse" }
        },
        "required": ["statusCode", "message", "payload"]
      },
      "HederaConnectorGetAccountResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 200 },
          "message": { "type": "string", "example": "Account retrieved." },
          "payload": { "$ref": "#/components/schemas/AccountResponse" }
        },
        "required": ["statusCode", "message", "payload"]
      },
      "GetAccountErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 404 },
          "message": {
            "type": "string",
            "example": "Account not found in node wallet."
          },
          "error": { "type": "string", "example": "Not Found" }
        },
        "required": ["statusCode", "message", "error"]
      },
      "GetAccountBalanceResponse": {
        "type": "object",
        "properties": { "hbar": { "type": "string", "example": "1000 ℏ" } },
        "required": ["hbar"]
      },
      "HederaConnectorAccountBalanceResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 200 },
          "message": {
            "type": "string",
            "example": "Account balance retrieved."
          },
          "payload": {
            "$ref": "#/components/schemas/GetAccountBalanceResponse"
          }
        },
        "required": ["statusCode", "message", "payload"]
      },
      "GetAccountBalanceErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number", "example": 404 },
          "message": { "type": "string", "example": "Account not found." },
          "error": { "type": "string", "example": "Not Found" }
        },
        "required": ["statusCode", "message", "error"]
      },
      "SendMessageToTopicDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message to send to the topic",
            "example": "Hello, world!"
          }
        },
        "required": ["message"]
      },
      "CreateEncryptedTopicDTO": {
        "type": "object",
        "properties": {
          "encryptionSize": {
            "type": "number",
            "description": "Topic encryption size: 512-bit, 768 or 1024",
            "example": 512
          },
          "topicName": {
            "type": "string",
            "description": "Topic name",
            "example": "Discussion chat"
          },
          "participants": {
            "description": "Array of topic participants",
            "example": [{ "hederaPublicKey": "", "kyberPublicKey": "" }],
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["encryptionSize", "topicName", "participants"]
      },
      "SendMessageToEncryptedTopicDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message to send to the topic",
            "example": "Hello, world!"
          }
        },
        "required": ["message"]
      },
      "CreateUpdateAppendFileDTO": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string",
            "description": "File contents",
            "example": "These are the file contents"
          }
        }
      },
      "CreateEncryptedFileDTO": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string",
            "description": "File contents",
            "example": "These are the file contents"
          },
          "accessList": {
            "description": "Array of accounts with access to the file",
            "example": [{ "hederaPublicKey": "", "kyberPublicKey": "" }],
            "type": "array",
            "items": { "type": "string" }
          },
          "encryptionSize": {
            "type": "number",
            "description": "Size of the Kyber key(s) used for encryption",
            "example": 512
          }
        },
        "required": ["accessList", "encryptionSize"]
      },
      "UpdateFileParticipantsDTO": {
        "type": "object",
        "properties": {
          "participants": {
            "description": "Array of file participants to be added",
            "example": [{ "hederaPublicKey": "", "kyberPublicKey": "" }],
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["participants"]
      }
    }
  }
}
